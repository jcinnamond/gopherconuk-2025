.slide
    .vcenter
        .center 
            .style[fg=$lowlight] << Part 3
        .nl < .nl
        .center
            .style[bold] << The right kind of abstraction

.slide
    .vcenter
        > Which abstractions are appropriate?

        .wait
        .vspace[lines=2]
        > I still can't give you an answer to this.
        .wait
        .style[fg=$lowlight] << (soz)

.slide
    .vcenter
        .vspace[lines=2]
        > Do the benefits of the new abstraction
        > outweigh the costs of introducing it?

        .wait
        .vspace[lines=2]
        > It's always going to be subjective.
        .wait
        > It's always going to be contextual.

        .wait
        .vspace[lines=2]
        > But I can tell you how to think about this...

.slide
    .middle
        > Be suspicious of abstractions

.slide
    .vcenter
        .center << Don't introduce an abstraction
        .nl
        .center << just because it seems neat

        .wait
        .vspace[lines=3]
        .center << Avoid premature abstraction

.slide
    .vcenter
        There are lots of bad abstractions out there

        .wait
        .vspace[lines=2]
        The wrong abstraction makes your code
        .nl
        harder to 
        .alternate
            understand
            maintain
            extend

.slide
    .vcenter
        .quote[citation="Sandi Metz"; altColor=$lowlight]
            prefer duplication over the wrong abstraction

    .moveTo [y=3; anchor=BottomRight]
    .center 
        .style[fg=$lowlight]
            https://sandimetz.com/blog/2016/1/20/the-wrong-abstraction

.slide
    .center << however

    .wait
    .vcenter
        .center << The right abstractions supercharge
        .nl
        .center << our ability to write code

.slide
    .vcenter
        .center << So... you think you've found a good abstraction

        .wait
        .vspace[lines=3]
        .center << What now?

.slide
    .vcenter
        .style[fg=$lowlight] << 1. 
        Understand the benefit

        .wait
        .vspace[lines=3]
        > What problem are you trying to solve?
        .wait
        .list[bullet=$bullet]
            avoiding repetition?
            revealing new ways to structure code?
            defering details?
            identifing a domain concept?
            describing some truth about the implementation?

.slide
    .vcenter
        .center << If you don't understand the benefit...
        
        .wait
        .vspace[lines=3]
        .center << then just stop

.slide
    .vcenter
        .style[fg=$lowlight] << 2. 
        Think about the social cost

        .wait
        .vspace[lines=3]
        > Does it fit with the culture and beliefs of the team?
        .wait
        > Is it the kind of abstraction they already use?
        
        .wait
        .vspace[lines=3]
        "... and if not ..."
        .nl
        > Is it worth the cost of challenging the social norm?

.slide
    .vcenter
        .style[fg=$lowlight] << 3. 
        Will the abstraction be a distraction?

        .wait
        .vspace[lines=3]
        Is the abstraction 
        .style[fg=$highlight] << ready-to-hand
        .nl
        .style[fg=$lowlight] << do you use it without thinking?
        .nl
        .nl
        Or is it 
        .style[fg=$highlight] << present-at-hand
        .nl
        .style[fg=$lowlight] << are you distracted by the abstraction?

        .wait
        .vspace[lines=3]
        > Avoid present-at-hand abstractions

.slide
    .vcenter
        .style[fg=$lowlight] << 4. 
        Is the abstraction 
        .style[fg=$highlight] << essential
        "?"

        .wait
        .vspace[lines=3]
        Is it a 
        .style[fg=$highlight] << true 
        representation of the code
        .nl
        you're trying to abstract away from?

        .wait
        .vspace[lines=2]
        > How well do you know the code you're abstracting?
        > How well do you understand the abstraction?
        > Are new examples likely to emerge?

        .wait
        .vspace[lines=1]
        > Learn the reality
        > Respect the reality

.slide
    .vcenter
        .style[fg=$lowlight] << 5. 
        Have you 
        .style[fg=$highlight] << recognised 
        some 
        .nl
        fundamental pattern in the code?

        .wait
        .vspace[lines=3]
        Are you exploiting a pattern that's really there?

        .wait
        .vspace[lines=3]
        Or are you 
        .style[fg=$lowlight] << doing work
        .nl
        to force an abstraction onto the code?

        .wait
        .vspace[lines=3]
        Good abstractions 
        .style[fg=$highlight] << emerge

.slide
    .vcenter
        Good abstractions
        .nl < .nl
        .list[bullet="  "]
            1. have a clear benefit
            2. fit well with the team culture
            3. are ready-to-hand 
            .style[fg=$lowlight] << (can be used without thinking about them)
            4. are essential representations
            .style[fg=$lowlight] << (accurately represent all examples)
            5. are a recognition of patterns that already exist

.slide
    .middle
        .style[fg=$lowlight] << this is a lot

.slide
    .middle
        Good abstractions are hard to find

.slide
    .vcenter
        > Do you really think you've found a good abstraction?
        
        .wait
        .vspace[lines=2]
        > Are you really that good?

        .wait
        .vspace[lines=2]
        > Yes!
        
        .wait
        .style[fg=$lowlight] << (maybe)

        .wait
        .vspace[lines=2]
        I believe in you!


.slide
    .vcenter
        > Finding good abstractions requires a lot of work

        .wait
        .vspace[lines=2]
        > ...but don't be put off!

        .wait
        .vspace[lines=2]
        > The payoff from finding a good abstraction
        > can be huge.

.slide
    .middle
        Don't take shortcuts

.slide
    .middle
        Don't assume it's a good abstraction


.slide
    .vcenter
        > But remember that code is cheap.

        .wait
        .vspace[lines=1]
        .style[italic]
            think you've found a good abstraction?

        .wait
        .vspace[lines=1]
        > Just try it.

        .wait
        > See what happens.

        .wait
        .vspace[lines=2]
        > The important thing...
        > is to think about what you're doing.
        .wait
        > and to check in with reality.

.slide
    .vcenter
        .center << Stay skeptical and curious

        .wait
        .vspace[lines=2]
        .center << Spend the time and effort required 

        .wait
        .vspace[lines=3]
        .center << Then you can find the right kind of abstraction

        .wait
        .vspace[lines=2]
        .center << and write great code

.slide
    .vcenter
        .center << Thank you!

        .vspace[lines=5]
        .style[fg=$lowlight]
            .center << The right kind of abstraction
            .nl
            .center << John Cinnamond
            .nl
            .center << GopherCon UK 2025